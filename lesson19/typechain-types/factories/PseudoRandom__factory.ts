/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { PseudoRandom, PseudoRandomInterface } from "../PseudoRandom";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "seed",
        type: "string",
      },
    ],
    name: "getCombinedRandomNumber",
    outputs: [
      {
        internalType: "uint256",
        name: "pseudoRandomNumber",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "seed",
        type: "string",
      },
    ],
    name: "getRandomNumber",
    outputs: [
      {
        internalType: "uint256",
        name: "pseudoRandomNumber",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "_r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_s",
        type: "bytes32",
      },
    ],
    name: "setSignature",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "message",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "verifyString",
    outputs: [
      {
        internalType: "address",
        name: "signer",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506106e0806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80637457ec8b1461005157806382c389d614610077578063d2c3fbb7146100bb578063d305843c146100e6575b600080fd5b61006461005f3660046103e1565b6100f9565b6040519081526020015b60405180910390f35b6100b9610085366004610468565b6040805160608101825260ff9094168085526020850184905293018190526000805460ff1916909317909255600155600255565b005b6100ce6100c93660046104b1565b6101bb565b6040516001600160a01b03909116815260200161006e565b6100646100f43660046103e1565b610355565b60008061014884848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052505460015460025460ff9092169450925090506101bb565b9050336001600160a01b0382161461017b5760405162461bcd60e51b815260040161017290610581565b60405180910390fd5b83836101886001436105bd565b4060405160200161019b939291906105d6565b60408051601f198184030181529190528051602090910120949350505050565b6040805180820190915260208082527f19457468657265756d205369676e6564204d6573736167653a0a303030303030908201528451600091906039820190620f423f81111561020a57600080fd5b6000620186a05b801561029c57600061022382856105e8565b905080600003610248578260000361024857610240600a836105e8565b915050610211565b826102528161060a565b935061026090508282610623565b61026a90856105bd565b9350610277600a836105e8565b915061028460308261063a565b9050846102908161060a565b95505080855350610211565b816000036102ad57601b91506102bb565b6102b8601a8361063a565b91505b8185526000858b6040516020016102d392919061067d565b60408051601f1981840301815282825280516020918201206000845290830180835281905260ff8d1691830191909152606082018b9052608082018a9052915060019060a0016020604051602081039080840390855afa15801561033b573d6000803e3d6000fd5b5050604051601f1901519c9b505050505050505050505050565b6000806103a484848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052505460015460025460ff9092169450925090506101bb565b9050336001600160a01b038216146103ce5760405162461bcd60e51b815260040161017290610581565b838360405160200161019b92919061069a565b600080602083850312156103f457600080fd5b82356001600160401b038082111561040b57600080fd5b818501915085601f83011261041f57600080fd5b81358181111561042e57600080fd5b86602082850101111561044057600080fd5b60209290920196919550909350505050565b803560ff8116811461046357600080fd5b919050565b60008060006060848603121561047d57600080fd5b61048684610452565b95602085013595506040909401359392505050565b634e487b7160e01b600052604160045260246000fd5b600080600080608085870312156104c757600080fd5b84356001600160401b03808211156104de57600080fd5b818701915087601f8301126104f257600080fd5b8135818111156105045761050461049b565b604051601f8201601f19908116603f0116810190838211818310171561052c5761052c61049b565b816040528281528a602084870101111561054557600080fd5b82602086016020830137600060208483010152809850505050505061056c60208601610452565b93969395505050506040820135916060013590565b6020808252600c908201526b125b9d985b1a59081cd9595960a21b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b818103818111156105d0576105d06105a7565b92915050565b82848237909101908152602001919050565b60008261060557634e487b7160e01b600052601260045260246000fd5b500490565b60006001820161061c5761061c6105a7565b5060010190565b80820281158282048414176105d0576105d06105a7565b808201808211156105d0576105d06105a7565b6000815160005b8181101561066e5760208185018101518683015201610654565b50600093019283525090919050565b600061069261068c838661064d565b8461064d565b949350505050565b818382376000910190815291905056fea26469706673582212208c0f734fa5a45084c5a6aa52de4b221aeb7906ef5f022127410c2c7e68f72fb564736f6c63430008110033";

type PseudoRandomConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PseudoRandomConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PseudoRandom__factory extends ContractFactory {
  constructor(...args: PseudoRandomConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PseudoRandom> {
    return super.deploy(overrides || {}) as Promise<PseudoRandom>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): PseudoRandom {
    return super.attach(address) as PseudoRandom;
  }
  override connect(signer: Signer): PseudoRandom__factory {
    return super.connect(signer) as PseudoRandom__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PseudoRandomInterface {
    return new utils.Interface(_abi) as PseudoRandomInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PseudoRandom {
    return new Contract(address, _abi, signerOrProvider) as PseudoRandom;
  }
}
